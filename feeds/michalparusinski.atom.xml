<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michal Parusinski - Personal Site - michalparusinski</title><link href="https://michal.parusinski.me/" rel="alternate"/><link href="https://michal.parusinski.me/feeds/michalparusinski.atom.xml" rel="self"/><id>https://michal.parusinski.me/</id><updated>2019-01-13T13:28:00+01:00</updated><entry><title>Snaps, Flatpaks, AppImage which one is ahead?</title><link href="https://michal.parusinski.me/snaps-flatpaks-appimages-which-one-is-ahead.html" rel="alternate"/><published>2019-01-13T13:28:00+01:00</published><updated>2019-01-13T13:28:00+01:00</updated><author><name>michalparusinski</name></author><id>tag:michal.parusinski.me,2019-01-13:/snaps-flatpaks-appimages-which-one-is-ahead.html</id><summary type="html">&lt;p&gt;On the Linux desktop there is a push for a universal packaging format.
Currently there are three main contenders: Snaps packages,
promoted by Canonical and Ubuntu; Flatpak, promoted by the Gnome Foundation although
not a Gnome project; and AppImage, a community-led project. Even though the three
packaging formats differ technically â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;On the Linux desktop there is a push for a universal packaging format.
Currently there are three main contenders: Snaps packages,
promoted by Canonical and Ubuntu; Flatpak, promoted by the Gnome Foundation although
not a Gnome project; and AppImage, a community-led project. Even though the three
packaging formats differ technically they share some goals:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Distribution agnostic packaging&lt;/strong&gt;: The packages are meant to run on any Linux
distribution (Ubuntu, Debian, Fedora, OpenSUSE, ArchLinux, ...). For developers this means
they can package once and run the software anywhere. This is usually achieved by bundling
most (sometimes all) software dependencies into a single package. Snap and FlatPaks do, however
support some shared runtimes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upstream packaging&lt;/strong&gt;: The packages are meant to come directly from the developers of the
project instead of having a maintainers for each software for each distribution. With upstream
packaging it is possible to get the latest version of the software as the developers intended.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will not comment on whether universal packaging is good or not. I am interested in knowing
which packaging format is &amp;quot;winning&amp;quot;. According to many blogs and social media posts on the internet
Snaps is way ahead of Flatpaks or AppImages. Frequently people will claim there are thousands of Snaps
but Flatpaks and AppImages are merely in the hundreds.&lt;/p&gt;
&lt;p&gt;To be more precise, Canonical states there are &lt;a class="reference external" href="https://blog.ubuntu.com/2018/10/18/infographic-snaps-in-numbers"&gt;4100&lt;/a&gt;
snap packages currently available. Whereas according to &lt;a class="reference external" href="https://flathub.org/apps/category/All"&gt;FlatHub there are 480 FlatPaks&lt;/a&gt;.
Finally, according to &lt;a class="reference external" href="https://appimage.github.io/apps/"&gt;AppImageHug there are 634 AppImages&lt;/a&gt;.
Many websites on the internet cite these statistics (albeit slightly now out of date). For
instance, &lt;a class="reference external" href="https://verummeum.com/portable-package-formats/"&gt;see Verummeum&lt;/a&gt;.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="36%" /&gt;
&lt;col width="31%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Snap packages&lt;/th&gt;
&lt;th class="head"&gt;FlatPaks&lt;/th&gt;
&lt;th class="head"&gt;AppImages&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&amp;lt; 4100 snaps&lt;/td&gt;
&lt;td&gt;480 flatpaks&lt;/td&gt;
&lt;td&gt;634 appimages&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Is this true? Is the Snap package format ahead of Flatpak and AppImage? The numbers may be correct but the conclusion
that Snaps are ahead is not. Relying on those numbers to claim Snaps are taking over is misleading. We aren't comparing
apple to apples. The number of packages for each format is counted differently.&lt;/p&gt;
&lt;p&gt;Furthermore having more packages doesn't necessarily mean having the best software selection
available. The numbers alone tell us nothing about the kind of software distributed as Snaps,
FlatPaks or AppImages.&lt;/p&gt;
&lt;p&gt;So how popular is each? Well, to answer this question let's dive in an analysis of each format and the software
selection available.&lt;/p&gt;
&lt;div class="section" id="comparing-snap-flatpak-and-appimage"&gt;
&lt;h2&gt;Comparing Snap, Flatpak and AppImage&lt;/h2&gt;
&lt;p&gt;Snaps are not distributed in the same way Flatpaks are, and AppImage's distribution method differs even more
so. Snaps are only available to the general public in one store. Meanwhile Flatpaks are distributed
in many different stores, FlatHub being one of those stores but the soul one. AppImage
are not even distributed in a store. AppImageHub is merely an attempt to list all applications
currently available as AppImages. It goes without saying the number of AppImage and Flatpaks could
easily be significantly underestimated.&lt;/p&gt;
&lt;p&gt;Bear in mind there is another difference which should be taken into account before comparing the numbers
given above. AppImages are intended as a packaging format
for end-user applications on the Desktop and the Server, but not for system level components like
the Gnome Desktop or systemd. Meanwhile Flatpaks are intended mainly for the Desktop and
can offer some system level runtimes like the Gnome Desktop, however, Flatpaks are not used to distribute
server applications.
Finally Snaps have the broader scope, being intended
for Server and the Desktop; and for both system and end-user software. Naturally one should expect
a higher number of Snaps packages.&lt;/p&gt;
&lt;p&gt;However most end-user Linux applications should be distributable as Snaps, Flatpaks or AppImages.
By comparing the type of software being distributed as each, we will get a better picture of how successful
each of these formats are.&lt;/p&gt;
&lt;div class="section" id="differences-in-software-selection"&gt;
&lt;h3&gt;Differences in software selection&lt;/h3&gt;
&lt;p&gt;By searching the stores and hubs, one can reveal a lot about each format and their success.&lt;/p&gt;
&lt;div class="section" id="snap-store"&gt;
&lt;h4&gt;Snap store&lt;/h4&gt;
&lt;p&gt;First I search the &lt;a class="reference external" href="https://snapcraft.io/store"&gt;Snap store&lt;/a&gt;. But because the search engine is a bit limited
I also relied on the alternative &lt;a class="reference external" href="https://uappexplorer.com/snaps"&gt;uAppExplorer&lt;/a&gt;. However it is hard to tell
how well the two match because uAppExplorer claims there are 2007 applications
while Canonical claim there are 4100 applications as snaps. Regardless here is what I found:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A huge number of Snaps are distributed for non-Intel/AMD architecture. For instance, for
ARM there are 1176 out of 2007 packages (58.6%). Similarly we have 244 out of 2007
for IBM's System Z aka s390x (12.2%); and 273 out of 2007 for PowerPC (13.6%). In total this gives us
&lt;strong&gt;84.3%&lt;/strong&gt; that are not distributed on Intel/AMD architecture. Not exactly the typical architectures
used by a typical Linux desktop user. This has implications when considering the success of Snap.
On one hand Snap is cross platform and widely available, which is a plus compared to Flatpak and
AppImage. On the other hand this put the number 4100 (or 2007 according to uAppExplorer) into
perspective because FlatHub and AppImageHub do not differentiate between architectures. When comparing Intel/AMD applications,
we get about 600 Snaps against 480 Flatpaks and 634 AppImages (which put AppImage in the lead).&lt;/li&gt;
&lt;li&gt;There is a huge number of &lt;em&gt;Playground&lt;/em&gt; applications on &lt;strong&gt;Snapcraft.io&lt;/strong&gt;, who serve no end-user purpose.
Those applications are a result of developers learning about Snaps. Let me give some examples.
If one searches on &lt;a class="reference external" href="https://snapcraft.io/store"&gt;Snap store&lt;/a&gt; the keyword &lt;em&gt;Hello&lt;/em&gt; one finds nearly &lt;strong&gt;300&lt;/strong&gt;
&amp;quot;Hello&amp;quot; applications. Alternatively, if one searches for &lt;em&gt;Test&lt;/em&gt; one finds
at least &lt;strong&gt;100&lt;/strong&gt; &amp;quot;Test&amp;quot; applications. There might be more applications on that kind. However this means
that by a conservative estimate about &lt;strong&gt;10%&lt;/strong&gt; of Snaps aren't real end user applications. This means
that Snaps are popular with developers as they are trying them out (Flatpak or AppImage could easily
be just as popular we just don't know) but the number of proper Snaps packages is closer to &lt;strong&gt;550&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If one adds up the software made available on the &lt;a class="reference external" href="https://snapcraft.io/store"&gt;Snap store&lt;/a&gt; in the different suggested sections
(namely &lt;em&gt;Dev&lt;/em&gt;, &lt;em&gt;Games&lt;/em&gt;, &lt;em&gt;Social&lt;/em&gt;, &lt;em&gt;Crypto&lt;/em&gt;, &lt;em&gt;Video&lt;/em&gt;, &lt;em&gt;Music&lt;/em&gt;, &lt;em&gt;Productivity&lt;/em&gt;, &lt;em&gt;Utilities&lt;/em&gt;, &lt;em&gt;Graphics&lt;/em&gt; and &lt;em&gt;Server&lt;/em&gt;),
I found there are about &lt;strong&gt;400&lt;/strong&gt; end-user applications, putting Snap behind both
FlatPak and AppImage. However probably many applications fit in none of the offered categories which would
mean 400 underestimates the number of end-user applications packaged as snaps.&lt;/li&gt;
&lt;li&gt;Duplicates applications are present in the store. For instance, &lt;em&gt;Stellarium&lt;/em&gt;, &lt;em&gt;Brackets&lt;/em&gt;, &lt;em&gt;rsync&lt;/em&gt;
and &lt;em&gt;tmux&lt;/em&gt; are duplicated. Unfortunately I have no easy way to count the number of duplicates present, but
they do not appear to be frequent.&lt;/li&gt;
&lt;li&gt;Snaps are used to distribute system level components. The runtimes for Gnome, KDE Plasma are distributed as
Snaps, so are Docker, the Linux kernel, MySQL, and many more. This is quite unique for Snaps although
some runtimes are distributed through Flatpak. Whether this is a gauge of success or not of Snaps as a packaging
format is a matter of opinion. But at least it provides flexibility for developers and hence in principle
fewer barriers preventing adoption of the Snap packaging format.&lt;/li&gt;
&lt;li&gt;Snaps are quite successful with big corporations like Microsoft or Jetbrains officially adopting Snaps as
their preferred distribution method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depending on how one counts an application there could be as high as 4100 snap packages or as low as 400. I think
when compared with Flatpak or AppImage we should count around 600 snaps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="flathub"&gt;
&lt;h4&gt;FlatHub&lt;/h4&gt;
&lt;p&gt;There is less to say about FlatHub:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;FlatHub does not provide information about the architecture. However each application is counted once even if it supports
multiple architectures. There are numerous ARM and Intel/AMD applications but I did not find any PowerPC applications or
System Z applications using FlatHub's GitHub page. I do not have a good way to count the number of ARM and Intel/AMD Flatpaks, but
it is sound to assume there are more Intel/AMD applications than ARM applications. Flatpak isn't as successful as Snap when
it comes to cross-platform support, but it shouldn't be a surprise as Flatpak is more desktop oriented and PowerPC and System Z
aren't exactly typical Linux desktop architectures.&lt;/li&gt;
&lt;li&gt;I did not find any &amp;quot;Hello&amp;quot; application and only found 4 &amp;quot;Test&amp;quot; applications. Overall FlatHub appears to be curated meaning
all or nearly all software on FlatHub is legitimate end-user applications.&lt;/li&gt;
&lt;li&gt;When, summing up, the number of software available in each category I found at the time 527, which is slightly higher
than the claimed at the time number of applications 479 (meaning some software is in multiple categories). It is worthy to note
there are &lt;strong&gt;132&lt;/strong&gt; games against 60 on Snapcraft and 40 on AppImageHub. Flatpak appears to be quite successful with games.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="appimagehub"&gt;
&lt;h4&gt;AppImageHub&lt;/h4&gt;
&lt;p&gt;Similarly there is less to say about AppImageHub&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Concerning architecture support AppImages are known to work on Intel/AMD and ARM. In some cases one needs to compile the
AppImage tooling. One example of an application available on 32-bit Intel, 64-bit AMD and ARM is MuseScore. I found no
cases of AppImage running on PowerPC or System Z.&lt;/li&gt;
&lt;li&gt;Again like with FlatHub I found no &amp;quot;Hello&amp;quot; and no &amp;quot;Test&amp;quot; on AppImageHub.&lt;/li&gt;
&lt;li&gt;The software catalog on AppImageHub is very different from Snapcraft or FlatHub. It
appears that AppImage is quite successful with QT/KDE application and Electron applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem with AppImageHub is that it is an effort to list the AppImages in the wild. It goes
without saying that there many applications which are not on the list (for instance OpenRA and everDO).
The number of AppImage could be way bigger, meaning AppImage being way ahead of
Snaps and FlatPak.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="measuring-success-with-existing-popular-applications"&gt;
&lt;h2&gt;Measuring success with existing popular applications&lt;/h2&gt;
&lt;p&gt;Instead of comparing the number of applications distributed as Snaps, FlatPaks or AppImage as a
measure of success, let's see how many existing Linux software has moved to Snap, FlatPak or AppImage.
It should give us an idea of how successful these new packaging formats are with old open source projects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Now I must be honest, answering this question is difficult and easily subjective.
I tried being impartial and accurate but you should take everything I state with a grain of salt.
Try researching on your own.&lt;/p&gt;
&lt;p&gt;Because counting on my own whether each piece of software on Linux is or not available as a Snaps, as a
FlatPak or as an AppImage is time consuming, I decided to take a subset of populare Linux applications.
To avoid putting personal bias in the list I choose the set of software listed on &lt;a class="reference external" href="https://www.fossmint.com/most-used-linux-applications/"&gt;FossMint&lt;/a&gt;.
I excluded &lt;em&gt;Google Drive&lt;/em&gt; and &lt;em&gt;Evernote&lt;/em&gt; as they are not official packaged for Linux. This should give
us a rough idea of the percentage of applications moving to universal packaging.&lt;/p&gt;
&lt;p&gt;Using this list, I searched for the following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Are the projects officially adopting AppImage, FlatPak or Snaps as a means of distribution? In
each case I checked the project's official website.&lt;/li&gt;
&lt;li&gt;Is the software distributed either as AppImage, FlatPak or Snaps? Regardless whether the project
official supports any of the format.&lt;/li&gt;
&lt;li&gt;When distributed as an AppImage, FlatPak or Snaps, is the latest version being shipped?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using the list, I obtained the following statistics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;About &lt;strong&gt;14%&lt;/strong&gt; of projects official distribute their software either as AppImage, FlatPak or Snaps.
Meaning that adoption is slow (the youngest of the three is 4 years old). Of the &lt;strong&gt;14% ~ 10&lt;/strong&gt; of applications which moved to universal packaging,
&lt;strong&gt;40% ~ 4&lt;/strong&gt; have adopted FlatPak, &lt;strong&gt;40% ~ 4&lt;/strong&gt; have adopted AppImage and &lt;strong&gt;20% ~ 2&lt;/strong&gt; have adopted Snaps.
However because the sample of applications officially distributed AppImages, FlatPaks and Snaps are so small,
one should not conclude yet that FlatPak or AppImage is being more successful.&lt;/li&gt;
&lt;li&gt;Concerning whether software is being made available as Snaps, Flatpaks or AppImage,
AppImage appears to be last with about &lt;strong&gt;37%&lt;/strong&gt;. Snaps and FlatPak are ahead with respectively about &lt;strong&gt;46%&lt;/strong&gt; and &lt;strong&gt;47%&lt;/strong&gt; adoption rate.
This discrepancy can be explained by the AppImage project's insistence on &lt;a class="reference external" href="https://docs.appimage.org/packaging-guide/upstream.html"&gt;upstream packaging&lt;/a&gt;.`.
Overall this means Snaps and FlatPaks are being more successful but only because volunteers (not
officially associated with open source software projects)
package popular Linux software as Snaps and FlatPaks.&lt;/li&gt;
&lt;li&gt;Concerning whether we have the latest version packaged as either format we see a big lead for Snaps.
About &lt;strong&gt;60%&lt;/strong&gt; of Snaps provided ship the latest version, &lt;strong&gt;53%&lt;/strong&gt; of FlatPaks provided ship the
latest version and only &lt;strong&gt;37.5%&lt;/strong&gt; of AppImages ship the latest version. AppImage has such a low
number because most AppImages have been created by &lt;em&gt;probonopd&lt;/em&gt; one of the main developers behind
the AppImage project, and he has not been updating them for more than a year.
The numbers are healthier for Snaps and FlatPak but it is still far from &lt;strong&gt;100%&lt;/strong&gt;. Many volunteers
who originally packaged software as Snaps, Flatpaks or AppImages have stopped updating the software
meaning a lot of the software is out of date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on this list I don't think one can claim Snaps is way ahead if anything it appears to be strongly
in competition with FlatPak. One should not conclude AppImage is losing steam either, AppImage is
doing well with &lt;strong&gt;634&lt;/strong&gt; applications distributed as AppImage according to AppImageHub
and many developers choosing AppImage as the official format for Linux. It is striking that a lot of
software is distributed today as Snaps, as Flatpaks and as AppImage by enthusiasts,
and not because projects are officially adopting either formats.
This means will still need to rely on &lt;strong&gt;maintainers&lt;/strong&gt; to distribute and maintain software as Snaps,
Flatpak or AppImage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-holding-back-either-snaps-flatpak-or-appimage"&gt;
&lt;h2&gt;What holding back either Snaps, FlatPak or AppImage?&lt;/h2&gt;
&lt;p&gt;What stops developers from using Snaps, FlatPaks or AppImages?
I searched various forums and GitHub for answers. Here are some of the main reasons:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Lack of time, resources or motivition:&lt;/strong&gt; This is one of the main reasons for not seeing a package format being adopted. See for instance the following links &lt;a class="reference external" href="https://github.com/albertlauncher/albert/issues/407"&gt;1&lt;/a&gt;, &lt;a class="reference external" href="https://sourceforge.net/p/freecol/improvement-requests/218/"&gt;2&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/freeorion/freeorion/issues/1236"&gt;3&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/f4exb/sdrangel/issues/113"&gt;4&lt;/a&gt;, ... . This should not be surprising because most software is developed by hobbyists and they don't necessarily have the time to learn/build for a new packaging format.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Not even packaged:&lt;/strong&gt; I was surprised to see lots of software projects not even packaging on Linux to begin with (for instance &lt;em&gt;rsync&lt;/em&gt; and &lt;em&gt;tmux&lt;/em&gt;). These projects just assume &lt;strong&gt;maintainers&lt;/strong&gt; will package&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software no longer developed&lt;/strong&gt;: Lots of software are no longer being developed. For instance, &lt;em&gt;Frozen Bubble&lt;/em&gt; was last updated in &lt;strong&gt;2010&lt;/strong&gt; whilst &lt;em&gt;Banshee&lt;/em&gt; was last updated in &lt;strong&gt;2014&lt;/strong&gt;. It is hard to expect projects with no developers to magically create a Snaps, FlatPaks or AppImages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lack of agreement over which format to use&lt;/strong&gt;: This is not frequent but fairly telling. If Snaps, FlatPak or AppImage are supposed to be the &lt;strong&gt;Universal Package Format&lt;/strong&gt; how come we have &lt;strong&gt;3&lt;/strong&gt; of them. &lt;em&gt;RStudio&lt;/em&gt; &lt;a class="reference external" href="https://github.com/rstudio/rstudio/issues/3079"&gt;could not agree&lt;/a&gt; over which format to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lots of people in the Linux community criticise Snaps, FlatPak and AppImage on technical ground and disagree with the philosophy of universal packaging, but ironically this didn't show up much as a reason not to support Snaps, FlatPak or AppImage. I think the people complaining about universal packaging are usually not the software developers, I think criticism comes more from system administrators, Linux distribution developers/maintainers and users who choose Linux for its security.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;At first it seems Snaps are the clear winner but the number 4100 is generous. It counts many
applications people won't install and it seems to count Snaps for different architecture
separately. A fairer comparison would put all three on par. Overall traditional Linux software appears
reluctant to adopt Snap/Flatpak/AppImage.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"/></entry><entry><title>Made it to the front page of EGC 2018</title><link href="https://michal.parusinski.me/made-it-to-the-front-page-of-egc-2018.html" rel="alternate"/><published>2018-05-19T17:03:00+02:00</published><updated>2018-05-19T17:03:00+02:00</updated><author><name>michalparusinski</name></author><id>tag:michal.parusinski.me,2018-05-19:/made-it-to-the-front-page-of-egc-2018.html</id><content type="html">&lt;p&gt;&lt;img alt="image0" src="https://egc2018.it/files/news/images/36335495032-1491322fcf-o.th_870x446.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Apparently I made to the front page of the European Go Congree 2018
(Pisa) web page.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://egc2018.it/en/news/view/id-32.html"&gt;EGC's article&lt;/a&gt;&lt;/p&gt;
</content><category term="Non classÃ©"/></entry><entry><title>What to learn from the Cambridge Analytica story</title><link href="https://michal.parusinski.me/what-to-learn-from-the-cambridge-analytica-story.html" rel="alternate"/><published>2018-03-30T12:14:00+02:00</published><updated>2018-03-30T12:14:00+02:00</updated><author><name>michalparusinski</name></author><id>tag:michal.parusinski.me,2018-03-30:/what-to-learn-from-the-cambridge-analytica-story.html</id><summary type="html">&lt;p&gt;If you are using Facebook and intend to keep using it the Cambridge
Analytica
&lt;a class="reference external" href="https://arstechnica.com/tech-policy/2018/03/facebooks-cambridge-analytica-scandal-explained/"&gt;story&lt;/a&gt;
can teach a few good practices to protect your privacy. Now of course
nothing will be as safe as not having a Facebook account but there are
sensible steps. Also I won't mention typical security â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are using Facebook and intend to keep using it the Cambridge
Analytica
&lt;a class="reference external" href="https://arstechnica.com/tech-policy/2018/03/facebooks-cambridge-analytica-scandal-explained/"&gt;story&lt;/a&gt;
can teach a few good practices to protect your privacy. Now of course
nothing will be as safe as not having a Facebook account but there are
sensible steps. Also I won't mention typical security and privacy
settings recommendation because there are already many websites treating
this (for instance
&lt;a class="reference external" href="https://www.techradar.com/how-to/internet/facebook-privacy-and-security-tips-1307505"&gt;https://www.techradar.com/how-to/internet/facebook-privacy-and-security-tips-1307505&lt;/a&gt;).&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Avoid using apps or&lt;/strong&gt; &lt;strong&gt;answering quizzes:&lt;/strong&gt; These may look benign
but some of them are aimed at harvesting data. In the scandal it
appears some apps could access your friend's data as well. At least
Facebook claims the accessing the friend's data part is fixed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep your number of friends low&lt;/strong&gt;: Facebook clearly wants the
opposite by constantly suggesting friends but friends on Facebook is
precisely what Cambridge Analytical used to access so many accounts.
They only surveyed 250000 accounts but through their friends they got
access to 50 million accounts. In principle Facebook doesn't let
third parties access friends data anymore but having people you don't
know (well) or trust in your Facebook friend list is a risk. So ask
yourself do you really need to have 1000 friends?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Treat Facebook data as public even&lt;/strong&gt; &lt;strong&gt;if you set tight privacy
options&lt;/strong&gt;: There are a couple of reasons for this. Firstly Facebook
isn't in the business of keeping data completely hidden, secure and
private. To survive as a company they need to sell access to some of
that data to clients like advertisers. As a company they have to walk
a fine line between privacy demanded by their users and openness
demanded by their clients. Preventing malicious access to data in
those conditions is especially difficult. Add in the fact that
Facebook developers and admins despite being some of the best in the
world aren't perfect, they operate a complex website and mistakes
happen. Malicious access to Facebook data has happened and will
probably happen again. Secondly Facebook has a popularity curse.
Their website and data is one of the primary target on the whole
internet for hacking. The treasure is just too valuable to many
malicious hackers and not just random individuals but also big
companies and governments. Finally there is the problem of mass
exposure. When you interact on Facebook, you tend to interact with
hundreds or even thousands of people. Facebook is not like a
discussion in your living room but more like a permanent public
rally. Now you can mitigate this to some extent with the privacy
settings but it isn't as simple as it sounds. They're complex and
have serious limitations in practice (see
.&lt;a class="reference external" href="https://www.eff.org/deeplinks/2010/04/facebook-timeline"&gt;https://www.eff.org/deeplinks/2010/04/facebook-timeline&lt;/a&gt;). So even
if Facebook is secure it is hard to guarantee all your Facebook
friends access Facebook securily (many people have malware on their
computer). To summarise it is far harder to restrict access to your
content on your Facebook than you might think, so it might be wise to
treat it as public discourse.&lt;/li&gt;
&lt;/ol&gt;
</content><category term="Non classÃ©"/></entry><entry><title>New blog | Nouveau blog</title><link href="https://michal.parusinski.me/bonjour-tout-le-monde.html" rel="alternate"/><published>2018-01-06T18:37:00+01:00</published><updated>2018-01-06T18:37:00+01:00</updated><author><name>michalparusinski</name></author><id>tag:michal.parusinski.me,2018-01-06:/bonjour-tout-le-monde.html</id><summary type="html">&lt;p&gt;Hello, for 2018 I am restarting my blog from scratch. In part because in
the transition from Wordpress to Pelican and because of my own silly
mistakes I lost a lot of content.&lt;/p&gt;
&lt;p&gt;Bonjour, pour 2018 je recommence mon blog Ã  partir de zÃ©ro. En partie
parce que durant la â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello, for 2018 I am restarting my blog from scratch. In part because in
the transition from Wordpress to Pelican and because of my own silly
mistakes I lost a lot of content.&lt;/p&gt;
&lt;p&gt;Bonjour, pour 2018 je recommence mon blog Ã  partir de zÃ©ro. En partie
parce que durant la transition de Wordpress Ã  Pelican et Ã  cause de mes
propres stupides erreures j'ai perdu du contenu.&lt;/p&gt;
</content><category term="Non classÃ©"/></entry></feed>